// <auto-generated />
using System;
using JuncalApi.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JuncalApi.Migrations
{
    [DbContext(typeof(JuncalContext))]
    [Migration("20230906110320_actualizarPreFactura")]
    partial class actualizarPreFactura
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("latin1_swedish_ci")
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "latin1");

            modelBuilder.Entity("JuncalApi.Modelos.JuncalAceriaMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Cod")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cod");

                    b.Property<int>("IdAceria")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_aceria");

                    b.Property<int>("IdMaterial")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_material");

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdeleted");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdAceria" }, "fk_aceria_materiales_aceria");

                    b.HasIndex(new[] { "IdMaterial" }, "fk_aceria_materiales_materiales");

                    b.ToTable("juncal.aceria_material", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalAcerium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("CodProveedor")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_proveedor");

                    b.Property<string>("Cuit")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cuit");

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("direccion");

                    b.Property<bool?>("Isdeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdeleted")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("juncal.aceria", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalAcoplado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Año")
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("año");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_Tipo");

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdeleted");

                    b.Property<string>("Marca")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("marca");

                    b.Property<string>("Patente")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("patente");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdTipo" }, "id_Tipo");

                    b.ToTable("juncal.acoplado", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalCamion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int?>("IdChofer")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_chofer");

                    b.Property<int?>("IdInterno")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_interno");

                    b.Property<int?>("IdTipoCamion")
                        .HasColumnType("int(200)")
                        .HasColumnName("id_tipoCamion");

                    b.Property<int?>("IdTransportista")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_transportista");

                    b.Property<bool?>("Isdeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdeleted")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Marca")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("marca");

                    b.Property<string>("Patente")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("patente");

                    b.Property<int?>("Tara")
                        .HasColumnType("int(11)")
                        .HasColumnName("tara");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdChofer" }, "fk_camion_chofer");

                    b.HasIndex(new[] { "IdTransportista" }, "fk_camion_transportista");

                    b.HasIndex(new[] { "IdTipoCamion" }, "fk_id_tipoCamion");

                    b.ToTable("juncal.camion", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalChofer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("apellido");

                    b.Property<int>("Dni")
                        .HasColumnType("int(11)")
                        .HasColumnName("dni");

                    b.Property<bool?>("Isdeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdeleted")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("telefono");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("juncal.chofer", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalContrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_vencimiento");

                    b.Property<DateTime?>("FechaVigencia")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_vigencia");

                    b.Property<int?>("IdAceria")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_aceria");

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdeleted");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.Property<string>("Numero")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("numero");

                    b.Property<int>("Tipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(2)")
                        .HasColumnName("tipo")
                        .HasDefaultValueSql("'1'")
                        .HasComment("1-CIF 2-FOB");

                    b.Property<decimal>("ValorFlete")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)")
                        .HasColumnName("valorFlete");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdAceria" }, "fk_contrato_aceria");

                    b.ToTable("juncal.contrato", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalContratoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int>("IdContrato")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_contrato");

                    b.Property<int>("IdMaterial")
                        .HasColumnType("int(200)")
                        .HasColumnName("id_material");

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdeleted");

                    b.Property<decimal>("Precio")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)")
                        .HasColumnName("precio");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdContrato" }, "fk_contrato_items_contrato");

                    b.HasIndex(new[] { "IdMaterial" }, "fk_id_material");

                    b.ToTable("juncal.contrato_items", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalCuentasCorriente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10)")
                        .HasColumnName("id");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha");

                    b.Property<TimeOnly>("Hora")
                        .HasColumnType("time")
                        .HasColumnName("hora");

                    b.Property<int>("IdProvedoor")
                        .HasColumnType("int(5)")
                        .HasColumnName("id_provedoor");

                    b.Property<int>("IdTipoMoviento")
                        .HasColumnType("int(2)")
                        .HasColumnName("id_tipo_moviento");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int(5)")
                        .HasColumnName("id_usuario");

                    b.Property<decimal>("Importe")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("importe");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdeleted");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("juncal.cuentas_corrientes", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalCuentasCorrientesTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10)")
                        .HasColumnName("id");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdeleted");

                    b.Property<int>("Tipo")
                        .HasColumnType("int(1)")
                        .HasColumnName("tipo")
                        .HasComment("1- Suma 2 - Resta");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("juncal.cuentas_corrientes_tipos", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalDireccionProveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("direccion");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int(200)")
                        .HasColumnName("idProveedor");

                    b.Property<bool>("Isdelete")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdelete");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdProveedor" }, "fk_idproveedor");

                    b.ToTable("juncal.direccion_proveedor", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalEstado", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<bool?>("Isdeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdeleted")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("juncal.estados", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalEstadosInterno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdeleted");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("juncal.estados_internos", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalEstadosReclamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<bool>("Isdelete")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdelete");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("juncal.estados_reclamo", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalExcelConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10)");

                    b.Property<int>("Bruto")
                        .HasColumnType("int(2)");

                    b.Property<sbyte>("ConfigMaterialCantidad")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("configMaterialCantidad");

                    b.Property<sbyte>("ConfigMaterialHasta")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("configMaterialHasta");

                    b.Property<sbyte>("ConfigRemitoCantidad")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("configRemitoCantidad");

                    b.Property<sbyte>("ConfigRemitoDesde")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("configRemitoDesde");

                    b.Property<int>("Descuento")
                        .HasColumnType("int(2)");

                    b.Property<int>("DescuentoDetalle")
                        .HasColumnType("int(2)")
                        .HasColumnName("Descuento_Detalle");

                    b.Property<int>("Fecha")
                        .HasColumnType("int(2)");

                    b.Property<int>("IdAceria")
                        .HasColumnType("int(10)")
                        .HasColumnName("Id_Aceria");

                    b.Property<int>("MaterialCodigo")
                        .HasColumnType("int(2)")
                        .HasColumnName("Material_Codigo");

                    b.Property<int>("MaterialNombre")
                        .HasColumnType("int(2)")
                        .HasColumnName("Material_Nombre");

                    b.Property<int>("Neto")
                        .HasColumnType("int(2)");

                    b.Property<int>("Remito")
                        .HasColumnType("int(2)");

                    b.Property<int>("Tara")
                        .HasColumnType("int(2)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("juncal.excel_config", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalFactura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("ContratoNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Contrato_Nombre");

                    b.Property<string>("ContratoNumero")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Contrato_Numero");

                    b.Property<string>("Cuit")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cuit");

                    b.Property<string>("Destinatario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Fecha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Nombre_Usuario");

                    b.Property<string>("NumeroFactura")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Numero_Factura");

                    b.Property<decimal>("TotalFactura")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)")
                        .HasColumnName("Total_Factura");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("juncal.factura", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalFacturaMateriale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int>("IdFactura")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_Factura");

                    b.Property<string>("NombreMaterial")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre_Material");

                    b.Property<decimal>("Peso")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)");

                    b.Property<decimal>("SubTota")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)")
                        .HasColumnName("subTota");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdFactura" }, "fk_FacturaMateriales_Factura");

                    b.ToTable("juncal.Factura_Materiales", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdeleted");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("juncal.material", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalMaterialProveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<bool?>("Activo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha");

                    b.Property<int>("IdMaterial")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_material");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_proveedor");

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdeleted");

                    b.Property<decimal?>("Precio")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)")
                        .HasColumnName("precio");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdMaterial" }, "fk_material_proveedor_material");

                    b.HasIndex(new[] { "IdProveedor" }, "fk_material_proveedor_proveedor");

                    b.ToTable("juncal.material_proveedor", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalOrden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<bool?>("Facturado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha");

                    b.Property<DateTime?>("FechaFacturacion")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_facturacion");

                    b.Property<int>("IdAceria")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_aceria");

                    b.Property<int?>("IdAcoplado")
                        .HasColumnType("int(200)")
                        .HasColumnName("id_acoplado");

                    b.Property<int?>("IdCamion")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_camion");

                    b.Property<int?>("IdContrato")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_contrato");

                    b.Property<int?>("IdDireccionProveedor")
                        .HasColumnType("int(200)")
                        .HasColumnName("id_direccion_proveedor");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_estado");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int(200)")
                        .HasColumnName("id_proveedor");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_Usuario_creacion");

                    b.Property<int?>("IdUsuarioFacturacion")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_Usuario_facturacion");

                    b.Property<bool?>("Isdeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdeleted")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Remito")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("remito");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdDireccionProveedor" }, "fk_direccion_proveedor");

                    b.HasIndex(new[] { "IdAcoplado" }, "fk_id_acoplado");

                    b.HasIndex(new[] { "IdProveedor" }, "fk_id_proveedor");

                    b.HasIndex(new[] { "IdAceria" }, "fk_orden_aceria");

                    b.HasIndex(new[] { "IdCamion" }, "fk_orden_camion");

                    b.HasIndex(new[] { "IdContrato" }, "fk_orden_contrato");

                    b.HasIndex(new[] { "IdEstado" }, "fk_orden_estados");

                    b.HasIndex(new[] { "IdUsuarioCreacion" }, "fk_usuariocreacion");

                    b.HasIndex(new[] { "IdUsuarioFacturacion" }, "fk_usuariofacturacion");

                    b.ToTable("juncal.orden", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalOrdenInterno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha");

                    b.Property<int>("IdAceria")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_aceria");

                    b.Property<int?>("IdAcoplado")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_acoplado");

                    b.Property<int?>("IdCamion")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_camion");

                    b.Property<int?>("IdContrato")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_contrato");

                    b.Property<int?>("IdDireccionProveedor")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_direccion_proveedor");

                    b.Property<int>("IdEstadoInterno")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_estado_interno");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_proveedor");

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdeleted");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Remito")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("remito");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdAceria" }, "fk_id_aceria");

                    b.HasIndex(new[] { "IdAcoplado" }, "fk_id_acoplado_interno");

                    b.HasIndex(new[] { "IdCamion" }, "fk_id_camion");

                    b.HasIndex(new[] { "IdContrato" }, "fk_id_contrato");

                    b.HasIndex(new[] { "IdDireccionProveedor" }, "fk_id_direccion_proveedor");

                    b.HasIndex(new[] { "IdEstadoInterno" }, "fk_id_estado_interno");

                    b.HasIndex(new[] { "IdProveedor" }, "fk_id_proveedor_interno");

                    b.ToTable("juncal.orden_interno", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalOrdenMarterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<bool>("FacturadoParcial")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("facturadoParcial");

                    b.Property<DateTime?>("FechaFacturado")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMaterial")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_material");

                    b.Property<int>("IdOrden")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_orden");

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdeleted");

                    b.Property<string>("NumFactura")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("num_Factura");

                    b.Property<decimal?>("Peso")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)")
                        .HasColumnName("peso");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdMaterial" }, "fk_orden_marterial_material");

                    b.HasIndex(new[] { "IdOrden" }, "fk_orden_marterial_orden");

                    b.ToTable("juncal.orden_marterial", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalOrdenMaterialInternoRecibido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int>("IdMaterial")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_material");

                    b.Property<int>("IdOrdenInterno")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_orden_interno");

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdeleted");

                    b.Property<decimal>("Peso")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)")
                        .HasColumnName("peso");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdMaterial" }, "fk_id_material_interno_recibido");

                    b.HasIndex(new[] { "IdOrdenInterno" }, "fk_id_orden_interno_recibido");

                    b.ToTable("juncal.orden_material_interno_recibido", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalOrdenMaterialInternoRecogido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int>("IdMaterial")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_material");

                    b.Property<int>("IdOrdenInterno")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_orden_interno");

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdeleted");

                    b.Property<decimal>("Peso")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)")
                        .HasColumnName("peso");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdMaterial" }, "fk_id_material_interno");

                    b.HasIndex(new[] { "IdOrdenInterno" }, "fk_id_orden_interno");

                    b.ToTable("juncal.orden_material_interno_recogido", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalPreFacturar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<bool>("Facturado")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("facturado");

                    b.Property<DateTime?>("FechaFacturado")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMaterialEnviado")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_material_enviado");

                    b.Property<int>("IdMaterialRecibido")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_material_recibido");

                    b.Property<int>("IdOrden")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_orden");

                    b.Property<int?>("IdUsuarioFacturacion")
                        .HasColumnType("int(11)")
                        .HasColumnName("idUsuarioFacturacion");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isDelete");

                    b.Property<decimal>("Peso")
                        .HasPrecision(11)
                        .HasColumnType("decimal(11)")
                        .HasColumnName("peso");

                    b.Property<decimal>("PesoBruto")
                        .HasPrecision(11)
                        .HasColumnType("decimal(11)")
                        .HasColumnName("peso_bruto");

                    b.Property<decimal>("PesoNeto")
                        .HasPrecision(11)
                        .HasColumnType("decimal(11)")
                        .HasColumnName("peso_neto");

                    b.Property<decimal>("PesoTara")
                        .HasPrecision(11)
                        .HasColumnType("decimal(11)")
                        .HasColumnName("peso_tara");

                    b.Property<string>("Remito")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("remito");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdMaterialEnviado" }, "fk_MaterialEnviado_OrdenMaterial");

                    b.HasIndex(new[] { "IdMaterialRecibido" }, "fk_MaterialRecibido_MaterialAceria");

                    b.HasIndex(new[] { "IdOrden" }, "fk_idOrden_orden");

                    b.HasIndex(new[] { "IdUsuarioFacturacion" }, "fk_idUsuarioFacturacion_Usuario");

                    b.ToTable("juncal.preFacturar", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalProveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdeleted");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.Property<string>("Origen")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("origen");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("juncal.proveedor", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalProveedorPresupuesto", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<int?>("IdAceria")
                        .HasColumnType("int(11)")
                        .HasColumnName("idAceria");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int(11)")
                        .HasColumnName("idProveedor");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int(11)")
                        .HasColumnName("idUsuario");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isDeleted");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdAceria" }, "idAceria_Aceria");

                    b.HasIndex(new[] { "IdProveedor" }, "idProveedor_proveedor");

                    b.HasIndex(new[] { "IdUsuario" }, "idUsuario_Usuario");

                    b.ToTable("juncal.proveedor_presupuesto", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalProveedorPresupuestoMateriale", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int>("IdMaterial")
                        .HasColumnType("int(11)")
                        .HasColumnName("idMaterial");

                    b.Property<int>("IdPresupuesto")
                        .HasColumnType("int(11)")
                        .HasColumnName("idPresupuesto");

                    b.Property<int>("Isdeleted")
                        .HasColumnType("int(11)")
                        .HasColumnName("isdeleted");

                    b.Property<double>("PrecioCif")
                        .HasColumnType("double")
                        .HasColumnName("precio_CIF");

                    b.Property<double>("PrecioFob")
                        .HasColumnType("double")
                        .HasColumnName("precio_FOB");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdMaterial" }, "idMaterial_Material");

                    b.HasIndex(new[] { "IdPresupuesto" }, "idPresupuesto_presupuesto");

                    b.ToTable("juncal.proveedor_presupuesto_materiales", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalRemitosReclamado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha");

                    b.Property<DateTime?>("FechaFinalizado")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_finalizado");

                    b.Property<DateTime?>("FechaReclamo")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_reclamo");

                    b.Property<int>("IdAceria")
                        .HasColumnType("int(11)")
                        .HasColumnName("idAceria");

                    b.Property<int>("IdEstadoReclamo")
                        .HasColumnType("int(11)")
                        .HasColumnName("idEstadoReclamo");

                    b.Property<int>("IdRemito")
                        .HasColumnType("int(11)")
                        .HasColumnName("idRemito");

                    b.Property<int?>("IdUsuarioFinalizado")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_usuario_finalizado");

                    b.Property<int?>("IdUsuarioIngreso")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_usuario_ingreso");

                    b.Property<int?>("IdUsuarioReclamo")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_Usuario_reclamo");

                    b.Property<sbyte>("IsDeleted")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Observacion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("observacion");

                    b.Property<string>("ObservacionFinalizado")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("observacion_finalizado");

                    b.Property<string>("ObservacionReclamo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("observacion_reclamo");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdAceria" }, "fk_Aceria");

                    b.HasIndex(new[] { "IdUsuarioReclamo" }, "fk_UsuarioReclamo");

                    b.HasIndex(new[] { "IdRemito" }, "fk_remito");

                    b.HasIndex(new[] { "IdUsuarioFinalizado" }, "fk_usuarioFinalizado");

                    b.HasIndex(new[] { "IdUsuarioIngreso" }, "fk_usuarioIngres");

                    b.HasIndex(new[] { "IdEstadoReclamo" }, "remitos_reclamados_Estados");

                    b.ToTable("juncal.remitos_reclamados", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "unq_roles_id")
                        .IsUnique();

                    b.ToTable("juncal.roles", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalSucursal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.Property<int>("Numero")
                        .HasColumnType("int(11)")
                        .HasColumnName("numero");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("juncal.sucursal", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalTipoAcoplado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("juncal.tipo_acoplado", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalTipoCamion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("juncal.tipo_camion", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalTransportistum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Cuit")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cuit");

                    b.Property<bool?>("Isdeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdeleted")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("juncal.transportista", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("apellido");

                    b.Property<int>("Dni")
                        .HasColumnType("int(11)")
                        .HasColumnName("dni");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_rol");

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdeleted");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("blob")
                        .HasColumnName("passwordHASH");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("blob")
                        .HasColumnName("passwordSALT");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("TokenCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TokenExpires")
                        .HasColumnType("datetime");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("usuario");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdRol" }, "fk_usuario_roles");

                    b.ToTable("juncal.usuario", (string)null);
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalAceriaMaterial", b =>
                {
                    b.HasOne("JuncalApi.Modelos.JuncalAcerium", "IdAceriaNavigation")
                        .WithMany("JuncalAceriaMaterials")
                        .HasForeignKey("IdAceria")
                        .IsRequired()
                        .HasConstraintName("fk_aceria_materiales_aceria");

                    b.HasOne("JuncalApi.Modelos.JuncalMaterial", "IdMaterialNavigation")
                        .WithMany("JuncalAceriaMaterials")
                        .HasForeignKey("IdMaterial")
                        .IsRequired()
                        .HasConstraintName("fk_aceria_materiales_materiales");

                    b.Navigation("IdAceriaNavigation");

                    b.Navigation("IdMaterialNavigation");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalAcoplado", b =>
                {
                    b.HasOne("JuncalApi.Modelos.JuncalTipoAcoplado", "IdTipoNavigation")
                        .WithMany("JuncalAcoplados")
                        .HasForeignKey("IdTipo")
                        .IsRequired()
                        .HasConstraintName("juncal.acoplado_ibfk_1");

                    b.Navigation("IdTipoNavigation");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalCamion", b =>
                {
                    b.HasOne("JuncalApi.Modelos.JuncalChofer", "IdChoferNavigation")
                        .WithMany("JuncalCamions")
                        .HasForeignKey("IdChofer")
                        .HasConstraintName("fk_camion_chofer");

                    b.HasOne("JuncalApi.Modelos.JuncalTipoCamion", "IdTipoCamionNavigation")
                        .WithMany("JuncalCamions")
                        .HasForeignKey("IdTipoCamion")
                        .HasConstraintName("fk_id_tipoCamion");

                    b.HasOne("JuncalApi.Modelos.JuncalTransportistum", "IdTransportistaNavigation")
                        .WithMany("JuncalCamions")
                        .HasForeignKey("IdTransportista")
                        .HasConstraintName("fk_camion_transportista");

                    b.Navigation("IdChoferNavigation");

                    b.Navigation("IdTipoCamionNavigation");

                    b.Navigation("IdTransportistaNavigation");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalContrato", b =>
                {
                    b.HasOne("JuncalApi.Modelos.JuncalAcerium", "IdAceriaNavigation")
                        .WithMany("JuncalContratos")
                        .HasForeignKey("IdAceria")
                        .HasConstraintName("fk_contrato_aceria");

                    b.Navigation("IdAceriaNavigation");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalContratoItem", b =>
                {
                    b.HasOne("JuncalApi.Modelos.JuncalContrato", "IdContratoNavigation")
                        .WithMany("JuncalContratoItems")
                        .HasForeignKey("IdContrato")
                        .IsRequired()
                        .HasConstraintName("fk_contrato_items_contrato");

                    b.HasOne("JuncalApi.Modelos.JuncalAceriaMaterial", "IdMaterialNavigation")
                        .WithMany("JuncalContratoItems")
                        .HasForeignKey("IdMaterial")
                        .IsRequired()
                        .HasConstraintName("fk_id_material");

                    b.Navigation("IdContratoNavigation");

                    b.Navigation("IdMaterialNavigation");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalDireccionProveedor", b =>
                {
                    b.HasOne("JuncalApi.Modelos.JuncalProveedor", "IdProveedorNavigation")
                        .WithMany("JuncalDireccionProveedors")
                        .HasForeignKey("IdProveedor")
                        .IsRequired()
                        .HasConstraintName("fk_idproveedor");

                    b.Navigation("IdProveedorNavigation");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalFacturaMateriale", b =>
                {
                    b.HasOne("JuncalApi.Modelos.JuncalFactura", "IdFacturaNavigation")
                        .WithMany("JuncalFacturaMateriales")
                        .HasForeignKey("IdFactura")
                        .IsRequired()
                        .HasConstraintName("fk_FacturaMateriales_Factura");

                    b.Navigation("IdFacturaNavigation");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalMaterialProveedor", b =>
                {
                    b.HasOne("JuncalApi.Modelos.JuncalMaterial", "IdMaterialNavigation")
                        .WithMany("JuncalMaterialProveedors")
                        .HasForeignKey("IdMaterial")
                        .IsRequired()
                        .HasConstraintName("fk_material_proveedor_material");

                    b.HasOne("JuncalApi.Modelos.JuncalProveedor", "IdProveedorNavigation")
                        .WithMany("JuncalMaterialProveedors")
                        .HasForeignKey("IdProveedor")
                        .IsRequired()
                        .HasConstraintName("fk_material_proveedor_proveedor");

                    b.Navigation("IdMaterialNavigation");

                    b.Navigation("IdProveedorNavigation");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalOrden", b =>
                {
                    b.HasOne("JuncalApi.Modelos.JuncalAcerium", "IdAceriaNavigation")
                        .WithMany("JuncalOrdens")
                        .HasForeignKey("IdAceria")
                        .IsRequired()
                        .HasConstraintName("fk_orden_aceria");

                    b.HasOne("JuncalApi.Modelos.JuncalAcoplado", "IdAcopladoNavigation")
                        .WithMany("JuncalOrdens")
                        .HasForeignKey("IdAcoplado")
                        .HasConstraintName("fk_id_acoplado");

                    b.HasOne("JuncalApi.Modelos.JuncalCamion", "IdCamionNavigation")
                        .WithMany("JuncalOrdens")
                        .HasForeignKey("IdCamion")
                        .HasConstraintName("fk_orden_camion");

                    b.HasOne("JuncalApi.Modelos.JuncalContrato", "IdContratoNavigation")
                        .WithMany("JuncalOrdens")
                        .HasForeignKey("IdContrato")
                        .HasConstraintName("fk_orden_contrato");

                    b.HasOne("JuncalApi.Modelos.JuncalDireccionProveedor", "IdDireccionProveedorNavigation")
                        .WithMany("JuncalOrdens")
                        .HasForeignKey("IdDireccionProveedor")
                        .HasConstraintName("fk_direccion_proveedor");

                    b.HasOne("JuncalApi.Modelos.JuncalEstado", "IdEstadoNavigation")
                        .WithMany("JuncalOrdens")
                        .HasForeignKey("IdEstado")
                        .IsRequired()
                        .HasConstraintName("fk_orden_estados");

                    b.HasOne("JuncalApi.Modelos.JuncalProveedor", "IdProveedorNavigation")
                        .WithMany("JuncalOrdens")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("fk_id_proveedor");

                    b.HasOne("JuncalApi.Modelos.JuncalUsuario", "IdUsuarioCreacionNavigation")
                        .WithMany("JuncalOrdenIdUsuarioCreacionNavigations")
                        .HasForeignKey("IdUsuarioCreacion")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_usuariocreacion");

                    b.HasOne("JuncalApi.Modelos.JuncalUsuario", "IdUsuarioFacturacionNavigation")
                        .WithMany("JuncalOrdenIdUsuarioFacturacionNavigations")
                        .HasForeignKey("IdUsuarioFacturacion")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_usuariofacturacion");

                    b.Navigation("IdAceriaNavigation");

                    b.Navigation("IdAcopladoNavigation");

                    b.Navigation("IdCamionNavigation");

                    b.Navigation("IdContratoNavigation");

                    b.Navigation("IdDireccionProveedorNavigation");

                    b.Navigation("IdEstadoNavigation");

                    b.Navigation("IdProveedorNavigation");

                    b.Navigation("IdUsuarioCreacionNavigation");

                    b.Navigation("IdUsuarioFacturacionNavigation");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalOrdenInterno", b =>
                {
                    b.HasOne("JuncalApi.Modelos.JuncalAcerium", "IdAceriaNavigation")
                        .WithMany("JuncalOrdenInternos")
                        .HasForeignKey("IdAceria")
                        .IsRequired()
                        .HasConstraintName("fk_id_aceria");

                    b.HasOne("JuncalApi.Modelos.JuncalAcoplado", "IdAcopladoNavigation")
                        .WithMany("JuncalOrdenInternos")
                        .HasForeignKey("IdAcoplado")
                        .HasConstraintName("fk_id_acoplado_interno");

                    b.HasOne("JuncalApi.Modelos.JuncalCamion", "IdCamionNavigation")
                        .WithMany("JuncalOrdenInternos")
                        .HasForeignKey("IdCamion")
                        .HasConstraintName("fk_id_camion");

                    b.HasOne("JuncalApi.Modelos.JuncalContrato", "IdContratoNavigation")
                        .WithMany("JuncalOrdenInternos")
                        .HasForeignKey("IdContrato")
                        .HasConstraintName("fk_id_contrato");

                    b.HasOne("JuncalApi.Modelos.JuncalDireccionProveedor", "IdDireccionProveedorNavigation")
                        .WithMany("JuncalOrdenInternos")
                        .HasForeignKey("IdDireccionProveedor")
                        .HasConstraintName("fk_id_direccion_proveedor");

                    b.HasOne("JuncalApi.Modelos.JuncalEstadosInterno", "IdEstadoInternoNavigation")
                        .WithMany("JuncalOrdenInternos")
                        .HasForeignKey("IdEstadoInterno")
                        .IsRequired()
                        .HasConstraintName("fk_id_estado_interno");

                    b.HasOne("JuncalApi.Modelos.JuncalProveedor", "IdProveedorNavigation")
                        .WithMany("JuncalOrdenInternos")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("fk_id_proveedor_interno");

                    b.Navigation("IdAceriaNavigation");

                    b.Navigation("IdAcopladoNavigation");

                    b.Navigation("IdCamionNavigation");

                    b.Navigation("IdContratoNavigation");

                    b.Navigation("IdDireccionProveedorNavigation");

                    b.Navigation("IdEstadoInternoNavigation");

                    b.Navigation("IdProveedorNavigation");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalOrdenMarterial", b =>
                {
                    b.HasOne("JuncalApi.Modelos.JuncalMaterial", "IdMaterialNavigation")
                        .WithMany("JuncalOrdenMarterials")
                        .HasForeignKey("IdMaterial")
                        .IsRequired()
                        .HasConstraintName("fk_orden_marterial_material");

                    b.HasOne("JuncalApi.Modelos.JuncalOrden", "IdOrdenNavigation")
                        .WithMany("JuncalOrdenMarterials")
                        .HasForeignKey("IdOrden")
                        .IsRequired()
                        .HasConstraintName("fk_orden_marterial_orden");

                    b.Navigation("IdMaterialNavigation");

                    b.Navigation("IdOrdenNavigation");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalOrdenMaterialInternoRecibido", b =>
                {
                    b.HasOne("JuncalApi.Modelos.JuncalMaterial", "IdMaterialNavigation")
                        .WithMany("JuncalOrdenMaterialInternoRecibidos")
                        .HasForeignKey("IdMaterial")
                        .IsRequired()
                        .HasConstraintName("fk_id_material_interno_recibido");

                    b.HasOne("JuncalApi.Modelos.JuncalOrdenInterno", "IdOrdenInternoNavigation")
                        .WithMany("JuncalOrdenMaterialInternoRecibidos")
                        .HasForeignKey("IdOrdenInterno")
                        .IsRequired()
                        .HasConstraintName("fk_id_orden_interno_recibido");

                    b.Navigation("IdMaterialNavigation");

                    b.Navigation("IdOrdenInternoNavigation");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalOrdenMaterialInternoRecogido", b =>
                {
                    b.HasOne("JuncalApi.Modelos.JuncalMaterial", "IdMaterialNavigation")
                        .WithMany("JuncalOrdenMaterialInternoRecogidos")
                        .HasForeignKey("IdMaterial")
                        .IsRequired()
                        .HasConstraintName("fk_id_material_interno");

                    b.HasOne("JuncalApi.Modelos.JuncalOrdenInterno", "IdOrdenInternoNavigation")
                        .WithMany("JuncalOrdenMaterialInternoRecogidos")
                        .HasForeignKey("IdOrdenInterno")
                        .IsRequired()
                        .HasConstraintName("fk_id_orden_interno");

                    b.Navigation("IdMaterialNavigation");

                    b.Navigation("IdOrdenInternoNavigation");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalPreFacturar", b =>
                {
                    b.HasOne("JuncalApi.Modelos.JuncalOrdenMarterial", "IdMaterialEnviadoNavigation")
                        .WithMany("JuncalPreFacturars")
                        .HasForeignKey("IdMaterialEnviado")
                        .IsRequired()
                        .HasConstraintName("fk_MaterialEnviado_OrdenMaterial");

                    b.HasOne("JuncalApi.Modelos.JuncalAceriaMaterial", "IdMaterialRecibidoNavigation")
                        .WithMany("JuncalPreFacturars")
                        .HasForeignKey("IdMaterialRecibido")
                        .IsRequired()
                        .HasConstraintName("fk_MaterialRecibido_MaterialAceria");

                    b.HasOne("JuncalApi.Modelos.JuncalOrden", "IdOrdenNavigation")
                        .WithMany("JuncalPreFacturars")
                        .HasForeignKey("IdOrden")
                        .IsRequired()
                        .HasConstraintName("fk_idOrden_orden");

                    b.HasOne("JuncalApi.Modelos.JuncalUsuario", "IdUsuarioFacturacionNavigation")
                        .WithMany("JuncalPreFacturars")
                        .HasForeignKey("IdUsuarioFacturacion")
                        .HasConstraintName("fk_idUsuarioFacturacion_Usuario");

                    b.Navigation("IdMaterialEnviadoNavigation");

                    b.Navigation("IdMaterialRecibidoNavigation");

                    b.Navigation("IdOrdenNavigation");

                    b.Navigation("IdUsuarioFacturacionNavigation");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalProveedorPresupuesto", b =>
                {
                    b.HasOne("JuncalApi.Modelos.JuncalAcerium", "IdAceriaNavigation")
                        .WithMany("JuncalProveedorPresupuestos")
                        .HasForeignKey("IdAceria")
                        .HasConstraintName("idAceria_Aceria");

                    b.HasOne("JuncalApi.Modelos.JuncalProveedor", "IdProveedorNavigation")
                        .WithMany("JuncalProveedorPresupuestos")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("idProveedor_proveedor");

                    b.HasOne("JuncalApi.Modelos.JuncalUsuario", "IdUsuarioNavigation")
                        .WithMany("JuncalProveedorPresupuestos")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("idUsuario_Usuario");

                    b.Navigation("IdAceriaNavigation");

                    b.Navigation("IdProveedorNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalProveedorPresupuestoMateriale", b =>
                {
                    b.HasOne("JuncalApi.Modelos.JuncalMaterial", "IdMaterialNavigation")
                        .WithMany("JuncalProveedorPresupuestoMateriales")
                        .HasForeignKey("IdMaterial")
                        .IsRequired()
                        .HasConstraintName("idMaterial_Material");

                    b.HasOne("JuncalApi.Modelos.JuncalProveedorPresupuesto", "IdPresupuestoNavigation")
                        .WithMany("JuncalProveedorPresupuestoMateriales")
                        .HasForeignKey("IdPresupuesto")
                        .IsRequired()
                        .HasConstraintName("idPresupuesto_presupuesto");

                    b.Navigation("IdMaterialNavigation");

                    b.Navigation("IdPresupuestoNavigation");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalRemitosReclamado", b =>
                {
                    b.HasOne("JuncalApi.Modelos.JuncalAcerium", "IdAceriaNavigation")
                        .WithMany("JuncalRemitosReclamados")
                        .HasForeignKey("IdAceria")
                        .IsRequired()
                        .HasConstraintName("fk_Aceria");

                    b.HasOne("JuncalApi.Modelos.JuncalEstadosReclamo", "IdEstadoReclamoNavigation")
                        .WithMany("JuncalRemitosReclamados")
                        .HasForeignKey("IdEstadoReclamo")
                        .IsRequired()
                        .HasConstraintName("remitos_reclamados_Estados");

                    b.HasOne("JuncalApi.Modelos.JuncalOrden", "IdRemitoNavigation")
                        .WithMany("JuncalRemitosReclamados")
                        .HasForeignKey("IdRemito")
                        .IsRequired()
                        .HasConstraintName("fk_remito");

                    b.HasOne("JuncalApi.Modelos.JuncalUsuario", "IdUsuarioFinalizadoNavigation")
                        .WithMany("JuncalRemitosReclamadoIdUsuarioFinalizadoNavigations")
                        .HasForeignKey("IdUsuarioFinalizado")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_usuarioFinalizado");

                    b.HasOne("JuncalApi.Modelos.JuncalUsuario", "IdUsuarioIngresoNavigation")
                        .WithMany("JuncalRemitosReclamadoIdUsuarioIngresoNavigations")
                        .HasForeignKey("IdUsuarioIngreso")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_usuarioIngres");

                    b.HasOne("JuncalApi.Modelos.JuncalUsuario", "IdUsuarioReclamoNavigation")
                        .WithMany("JuncalRemitosReclamadoIdUsuarioReclamoNavigations")
                        .HasForeignKey("IdUsuarioReclamo")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_UsuarioReclamo");

                    b.Navigation("IdAceriaNavigation");

                    b.Navigation("IdEstadoReclamoNavigation");

                    b.Navigation("IdRemitoNavigation");

                    b.Navigation("IdUsuarioFinalizadoNavigation");

                    b.Navigation("IdUsuarioIngresoNavigation");

                    b.Navigation("IdUsuarioReclamoNavigation");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalUsuario", b =>
                {
                    b.HasOne("JuncalApi.Modelos.JuncalRole", "IdRolNavigation")
                        .WithMany("JuncalUsuarios")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("fk_usuario_roles");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalAceriaMaterial", b =>
                {
                    b.Navigation("JuncalContratoItems");

                    b.Navigation("JuncalPreFacturars");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalAcerium", b =>
                {
                    b.Navigation("JuncalAceriaMaterials");

                    b.Navigation("JuncalContratos");

                    b.Navigation("JuncalOrdenInternos");

                    b.Navigation("JuncalOrdens");

                    b.Navigation("JuncalProveedorPresupuestos");

                    b.Navigation("JuncalRemitosReclamados");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalAcoplado", b =>
                {
                    b.Navigation("JuncalOrdenInternos");

                    b.Navigation("JuncalOrdens");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalCamion", b =>
                {
                    b.Navigation("JuncalOrdenInternos");

                    b.Navigation("JuncalOrdens");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalChofer", b =>
                {
                    b.Navigation("JuncalCamions");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalContrato", b =>
                {
                    b.Navigation("JuncalContratoItems");

                    b.Navigation("JuncalOrdenInternos");

                    b.Navigation("JuncalOrdens");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalDireccionProveedor", b =>
                {
                    b.Navigation("JuncalOrdenInternos");

                    b.Navigation("JuncalOrdens");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalEstado", b =>
                {
                    b.Navigation("JuncalOrdens");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalEstadosInterno", b =>
                {
                    b.Navigation("JuncalOrdenInternos");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalEstadosReclamo", b =>
                {
                    b.Navigation("JuncalRemitosReclamados");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalFactura", b =>
                {
                    b.Navigation("JuncalFacturaMateriales");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalMaterial", b =>
                {
                    b.Navigation("JuncalAceriaMaterials");

                    b.Navigation("JuncalMaterialProveedors");

                    b.Navigation("JuncalOrdenMarterials");

                    b.Navigation("JuncalOrdenMaterialInternoRecibidos");

                    b.Navigation("JuncalOrdenMaterialInternoRecogidos");

                    b.Navigation("JuncalProveedorPresupuestoMateriales");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalOrden", b =>
                {
                    b.Navigation("JuncalOrdenMarterials");

                    b.Navigation("JuncalPreFacturars");

                    b.Navigation("JuncalRemitosReclamados");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalOrdenInterno", b =>
                {
                    b.Navigation("JuncalOrdenMaterialInternoRecibidos");

                    b.Navigation("JuncalOrdenMaterialInternoRecogidos");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalOrdenMarterial", b =>
                {
                    b.Navigation("JuncalPreFacturars");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalProveedor", b =>
                {
                    b.Navigation("JuncalDireccionProveedors");

                    b.Navigation("JuncalMaterialProveedors");

                    b.Navigation("JuncalOrdenInternos");

                    b.Navigation("JuncalOrdens");

                    b.Navigation("JuncalProveedorPresupuestos");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalProveedorPresupuesto", b =>
                {
                    b.Navigation("JuncalProveedorPresupuestoMateriales");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalRole", b =>
                {
                    b.Navigation("JuncalUsuarios");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalTipoAcoplado", b =>
                {
                    b.Navigation("JuncalAcoplados");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalTipoCamion", b =>
                {
                    b.Navigation("JuncalCamions");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalTransportistum", b =>
                {
                    b.Navigation("JuncalCamions");
                });

            modelBuilder.Entity("JuncalApi.Modelos.JuncalUsuario", b =>
                {
                    b.Navigation("JuncalOrdenIdUsuarioCreacionNavigations");

                    b.Navigation("JuncalOrdenIdUsuarioFacturacionNavigations");

                    b.Navigation("JuncalPreFacturars");

                    b.Navigation("JuncalProveedorPresupuestos");

                    b.Navigation("JuncalRemitosReclamadoIdUsuarioFinalizadoNavigations");

                    b.Navigation("JuncalRemitosReclamadoIdUsuarioIngresoNavigations");

                    b.Navigation("JuncalRemitosReclamadoIdUsuarioReclamoNavigations");
                });
#pragma warning restore 612, 618
        }
    }
}
